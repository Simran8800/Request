{
    "course": {
        "id": "152",
        "name": "Volunteering with Meraki",
        "logo": "http://navgurukul.org/img/sqlogo.jpg",
        "notes": null,
        "days_to_complete": null,
        "short_description": "This is a Self Onboarding Doc for Volunteers willing to Facilitate Python Programming and Spoken English to Students.",
        "type": "html",
        "course_type": null,
        "lang_available": [
            "en",
            "hi"
        ],
        "exercises": [
            {
                "id": "4214",
                "parent_exercise_id": null,
                "course_id": "152",
                "name": "Background",
                "slug": "instructions-to-python-facilitators__background_md",
                "sequence_num": 0,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/instructions-to-python-facilitators/background.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "> It is good to see you here. The very fact that you have reached here signals that there are many steps that you have already taken to support the cause of taking technical education for the girls from the rural area. \n\n> Perhaps, the next few steps are going to be the hardest ones. They would need us to proactively find our place in the middle of the unstructured structure that is there right now. But I promise, once you have settled in, it would be so much easier.\n\n> Abhishek\nBackground\n\nAt NavGurukul, we run a one year residential course for young women between the age group of 16-25 years, from underserved communities, to learn Software Programming languages such as `Python`, Javascript, HTML/CSS, and support them till they get placed as Software Developers. \n\n\n\nWe're 4 and a half years old, and at present have 4 residential campuses (Dharamshala, Bangalore, Sarjapur-Bangalore and Pune) which have a capacity of 600+ students. \n\n\n\nSince the second half of 2020, we've begun scaling up our organisation in an effort to reach more students and help transform their lives by providing them an opportunity to learn software programming and assist them with skills that can make them employable.\n\n\n\nWe partner with NGOs and Government bodies who work with a large student pool, to help reach the students with this opportunity. Interested students, give an entrance assessment which tests them on basic mathematics and logical thinking. Once, that is cleared, there are a few rounds of interviews that are conducted to check the ability, interest and need of the student to enrol in the program. \n\n\n\n> We recently partnered with an organisation in Maharashtra who mobilised over 4200 students for the entrance assessment, but after all the rounds, only 100 could convert into NavGurukul students.\nThis is where Meraki comes in...\n\n"
                    }
                ]
            },
            {
                "id": "4215",
                "parent_exercise_id": null,
                "course_id": "152",
                "name": "About Meraki",
                "slug": "instructions-to-python-facilitators__about-meraki_md",
                "sequence_num": 100,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/instructions-to-python-facilitators/about-meraki.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "We at Meraki are targeting the remainder students, who *had the opportunity but lacked the aptitude* to get through the entrance assessment. There are multiple students like them, who may have had multiple opportunities, but lacked the right aptitude to make use of the provided opportunity. \n\n\n\nThrough Meraki we wish to make programming and digital skills accessible to learners from different communities through a smartphone, and support their learning journey through our live classes. We are currently working with 500+ learners and aim to reach over 100k users by the end of the year! \n\n\n\nWe're providing the following programs on Meraki:\n\n\n\n- *Basics of `Python`* (Meraki is equipped with `compiler` on the phone, such that students do not have to use a desktop or laptop. All learning and practice can be facilitated on a touch screen mobile phone)\n\n- *Touch Typing* (With the support of OTG `key`boards, provided by Meraki to 5000 identified deserving students)\n\n- *Spoken English* (Teaching students with English Speaking)\n\n\n\n> You can volunteer with us to help teach students in any of the above programs through Meraki!\nCheckout the `application`\n\nMeraki can be downloaded from \n\n\n\n[Meraki - Learn Python, English in Hindi, English - Apps on Google Play\n](https://play.google.com/store/apps/details?id=org.merakilearn)\n"
                    }
                ]
            },
            {
                "id": "4216",
                "parent_exercise_id": null,
                "course_id": "152",
                "name": "Getting Started",
                "slug": "instructions-to-python-facilitators__getting-started_md",
                "sequence_num": 200,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/instructions-to-python-facilitators/getting-started.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "Hello Change-Makers,\n\nWe welcome you aboard to teach **Basics of `Python` Programming, Spoken English and Touch Typing** to over **100k young women** between the age group of 15-25, from various parts of the country. Your contribution is highly valuable in creating a drastic impact in the learning journey of these young women and enabling them to get an **aspirational job**, have **a voice**, and be equipped to **bring at least 10 families out of poverty** in a financially sustainable model.\n\n\n\nWe're glad you have decided to teach young children remotely and contribute in bringing a difference in their lives. \n\n\n\nTo ensure you have a smooth onboarding and enable you to self start this process, sharing a few simple steps you can follow.\n\n\n\nStep 1 - Signing into Meraki\n\nWe have a student facing Android Application and a website that caters to volunteers, partners, clients, etc. Please download the\n[application\n](https://play.google.com/store/apps/details?id=org.merakilearn&hl=en_IN&gl=US)\nand sign in. Spend some time and explore the application.\n\n\n*(Our students use an android phone to access Meraki, hence we request you to go over the `application` and understand the user interface. This can help you connect with students and solve their questions easily.)*\n\n\n\nYou can see the following videos for further assistance\n\n* [Signing into Meraki and Home Screen](https://youtu.be/Lha-WlS2Hkg)\n* [Course, Mentor, Playground](https://youtu.be/UN3us4vDHhc)\n\n> You&#39;ll be using the [website](https://www.merakilearn.org,) more often than the android application, to schedule your classes, etc. We ask you to use the Android Application to understand the interface from the student&#39;s perspective.\nFor the next steps, Sign into\n[Merakilearn.org\n](https://www.merakilearn.org,)\nusing your Web Browser.\n*(Prefer Google Chrome)*\n\n\n* Learn to [Create a Class](https://www.merakilearn.org/course/152/exercise/3721)\n* If you want to teach `Python` to students, then check [**this**](https://www.merakilearn.org/course/152/exercise/3718) out.\n* If you want to teach Spoken English to students, then check [**this**](https://www.merakilearn.org/course/152/exercise/3720) out.\n\n> You may follow the respective links and fret not if you get stuck! You can write to us at volunteer@navgurukul.org in case of queries. We are here to help!\n"
                    }
                ]
            },
            {
                "id": "4220",
                "parent_exercise_id": null,
                "course_id": "152",
                "name": "How to Create a Class?",
                "slug": "instructions-to-python-facilitators__create-class_md",
                "sequence_num": 300,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/instructions-to-python-facilitators/create-class.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "Now that you've decided to teach students, lets see how you can get there and get started! \n\n\n\nStep 2 - Creating a Class\n\n[Class Scheduler\n](https://www.merakilearn.org/class)\n, on this page, you'll find all the classes created by other facilitators. You can recheck the date and time before creating your class, to ensure it doesn't clash with someone else's, and that your Classes are varied. Eg: Facilitator\n**A**\ncreates\n*Class 1 - Introduction to Python*\non Thursday, at 4pm. Then you can create your\n*Class 1 - Introduction to Python*\non Saturday or Sunday, to space out similar sessions.\n\n\nYou can click on the\n*Create a Class*\nbutton on the left hand side corner, to create your class.\n*(Please use the nomenclature mentioned in the [curriculum table](https://www.merakilearn.org/course/145/exercise/3523) if you're creating a workshop)*\n\n\n"
                    },
                    {
                        "type": "image",
                        "value": {
                            "url": "https://merakilearn.s3.ap-south-1.amazonaws.com/course_images/instructions-to-python-facilitators/images/how_to_create_a_class.png",
                            "text": "Creating a class"
                        }
                    },
                    {
                        "type": "markdown",
                        "value": "What's the difference between a Workshop and a Cohort Class?\n\nIn a Cohort system, you will be able to \n\n- Create recursive classes at one go. \n\n- Students enrolled in one Cohort class, would get notified for future classes as well. \n\n- Fix the class days and timings before hand, ensuring regular enrollment of students. \n\n- Help students continue a cohort system with one facilitator. \n\n- Flexibility in conducting the sessions at your pace. \n\n- **Nomenclature** - *[NGO Partner Name]* - `Python` Programming with *[Your Name]* - Batch *[Number 1,2,3,4]*\n\n\n\nIn a Workshop systen, you will be able to \n\n- Create one class at a time, making you schedule 23 individual classes over the course of the program\n\n- Students enrolled in one Workshop class, would only get notified for that class. \n\n- Gives you flexibility in your class days and timings, but can cause irregularity in students enrollments\n\n- There is a chance a student may end up attending classes conducted by more than one facilitator throughout their program\n\n- Each Class has a defined set of topics to be covered.\n\n- **Nomenclature** - Class *[Number 1,2,3,etc]* - *[Name of Class as mentioned in Curriculum `Tab`le]*\n\n\n\nOnce you have completed creating a class. You shall get an email and/or a calendar invite. You may use that to join the Google Meet you've created for your class. You can use this\n[Extension\n](https://chrome.google.com/webstore/detail/auto-admit-for-google-mee/epemkdedgaoeeobdjmkmhhhbjemckmgb/related?hl=en,)\nto Auto Admit students to the Meet you've scheduled.\n\n\n> It would be ideal for you to conduct a minimum of 2 classes per week, and schedule your sessions for atleast 3 weeks from the first class. This helps the student know when to expect your classes. You can always go back and edit the class, if you have to change the time or date of the class. \nCheck out the following steps only if you're a Spoken English Facilitator\n\n**NOTE** : This will be a recusrive Session, meaning 1 volunteer will be teaching 5 students, and same students will be taught for the rest of the weeks as well to bring a cohort culture. Currently the slots available are *Weekdays/Weekends 7-9pm*.\n\n\n\nThe class conduct has to be done in following manner : \n\n\n\n1. Create first class over Meraki. Limit student entry to 5-7 only. Gather student email-ids, send them calendar invites for the second class. *Do not create second class over Meraki*\n\n2. Repeat the calendar invite for the following classes.\n\n3. This is a temporary solution till the *\"Recursive Class\"* - feature gets updated on Meraki.\n\n"
                    }
                ]
            },
            {
                "id": "4217",
                "parent_exercise_id": null,
                "course_id": "152",
                "name": "Code of Conduct for Volunteers",
                "slug": "instructions-to-python-facilitators__code-of-conduct-V_md",
                "sequence_num": 400,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/instructions-to-python-facilitators/code-of-conduct-V.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "The `code` is a tool for understanding and upholding culturally accep`tab`le, safe, and respectful standards across the online classroom structure. The `code` of conduct ensures volunteers begin with a common understanding of volunteer standards. \n\n\n\nThis has to be maintained while conducting the online sessions over Meraki `application` and Google-Meet links, offline/online.\n\n\n\nFollowing are some `key` points to be kept in mind by volunteers while conducting sessions:\n\n\n\n- **Video Call Enablement**\n  - Videos are not mandatory, using video during the class is a personal choice. Please decide based on the situation/class.\n  - If you choose to use video during the call, please ensure that you are maintaining an appropriate standard of dress and personal hygiene\n\n\n- **Voice and Chat interaction**\n  - Please do not write any text in the chat-box which is not relevant to the class\n  - Adopt correct words, usage of foul language is prohibited\n  - Keeping confidential matters confidential\n  - Do not engage in any abusive/bullying activity that may cause distress to another person (such as verbal abuse, physical abuse, assault, bullying, or discrimination or harassment on the grounds of gender, civil status, family status, sexual orientation, religion, age, disability, race or membership of the Traveler community)\n\n\n- **Mode of Communication and Information with Students**\n  - Do not ask/share personal contact details\n  - Do not send/accept requests over any other social media platform eg Instagram, Facebook,  Snapchat, etc., is not recommended to ensure security and privacy.\n  - Instruct students on how you will communicate with them, and how they should communicate with you for example - the students can raise their hands to ask a question or you can ask a student to respond to a query or question, behaviour, or whether they should mute their microphones (possible to enforce by using the mute all button) and turn on or off their webcam at the start of each session.\n  - Do not Seek or accept any gifts, rewards, benefits, or hospitality in the course of their role\n\n\n- **Online** **Classroom Etiquettes**\n  - Not be affected by alcohol, drugs, or medication which will affect their abilities to carry out their duties and responsibilities while volunteering\n  - Treating all the students with fairness and dignity\n  - When sharing your screen, close all sensitive documents or `tabs`. Check your browser bookmarks and other open `applications` and furthermore, be aware that you are on camera\n  - Meeting time and task commitments and providing sufficient notice when they will not be available so that alternative arrangements can be made\n  - Raising and reporting concerns about possible wrong-doing witnessed by the volunteer in the course of the volunteer\u2019s role\n  - Ensure that content shared with students is appropriate and accessible to all, and is course-related.\n  - Clarify when the live session has ended, and wait for all students to log off/leave the\n  session.\n\n\n- **Privacy, Compliance, Data** **Confidentiality, and Breach of Conduct**\n  - Do not commit on behalf of the organization unless it is approved in writing or asked. Restrain from providing a `false` or misleading `statement`, declaration, document, record, or claim in respect of NavGurukul/Meraki\n  - Students' camera\u2019s should be off, unless it is of added value to your classes to switch them on. Students may always choose to switch them on voluntarily.\n  - Inform students in advance of live sessions if they will be recorded and the only record sessions if this is of added value to your classes. Students may then choose to turn off their webcam if they do not wish to be part of the recording\n  - Do not share any information which is not related to the course content\n  - Do not Provide a `false` or misleading `statement`, declaration, document, record, or claim in respect of NavGurukul/Meraki\n\n\n\n***Where a volunteer is found to be in breach of the standards outlined in this `Code` of Conduct or any of Meraki\u2019s other policies and procedures, in the interest of students, this may result in the volunteer\u2019s position being terminated***\n\n"
                    }
                ]
            },
            {
                "id": "4221",
                "parent_exercise_id": null,
                "course_id": "152",
                "name": "Python Class Structure",
                "slug": "instructions-to-python-facilitators__python-class-structure_md",
                "sequence_num": 500,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/instructions-to-python-facilitators/python-class-structure.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "Step 3 - Curriculum\n\nBrowse through the Curriculum to teach **Basics of `Python` Programming** \n\n\n\n* [Introduction to `Python`](https://www.merakilearn.org/course/199/exercise/5938)\n* [`Variables`](https://www.merakilearn.org/course/164/exercise/5918)\n* [Data Types](https://www.merakilearn.org/course/165/exercise/5675)\n* [`Operators`](https://www.merakilearn.org/course/166/exercise/5690)\n* [If-Else](https://www.merakilearn.org/course/167/exercise/5651)\n* [`Loops`](https://www.merakilearn.org/course/168/exercise/5791)\n* [Lists](https://www.merakilearn.org/course/169/exercise/5842)\n* [Dictionary](https://www.merakilearn.org/course/170/exercise/5883)\n\nThe\n**_8 courses in Python_**\nare divided into\n[**_23 Workshop Classes_**\n](https://www.merakilearn.org/course/145/exercise/3523)\n. We expect you to follow this Class division, to ensure that the sequence of learning is maintained, and a child has an opportunity to come back and attend only those specific classes she had doubts in, or had missed it for whatever reasons.\n\n\nStep 4 - Classes with Students\n\n* Use the first five minutes to understand their learning journey on Meraki, and encourage them to self learn using Live Classes only as an extra help.\n\n* Use the next ten minutes to recapitulate and revise previous topics, and solve their previous queries.\n\n* You can use the second half of the class to share problems for the students to solve. It could be in the form of MCQs, `True` or `False`, Dry Run, or even Questions.\n\n* You can assign some homework or prework a student must do before the next class, such as the next topic they can read/ study and come for in the next class.\n\n\n\n> Keep checking in with the students if they&#39;ve understood or no in between to ensure its a dialogue and not a monologue. You can try to make it as innovative and interactive as you wish to! \nYou can get in touch with the students through\n[Chat\n](https://www.merakilearn.org/mentor)\n. Please email\n[&#x73;&#x69;&#x6e;&#100;&#x68;&#x75;&#64;&#110;&#x61;&#118;&#103;&#117;&#114;&#117;&#x6b;&#x75;&#x6c;&#46;&#111;&#114;&#x67;\n](mailto:&#x73;&#x69;&#x6e;&#100;&#x68;&#x75;&#64;&#110;&#x61;&#118;&#103;&#117;&#114;&#117;&#x6b;&#x75;&#x6c;&#46;&#111;&#114;&#x67;)\nif you want to be added to more student groups on the Mentor Tab.\n\n\nFurther Support\n\nDon't fret in case, this is still confusing. \n\n**We are here to help**\n\n. You can write back to us on the Volunteering email you received from our end, or write to \n\n[&#x76;&#111;&#x6c;&#117;&#x6e;&#116;&#x65;&#101;&#x72;&#64;&#x6e;&#97;&#x76;&#x67;&#x75;&#114;&#x75;&#107;&#117;&#x6c;&#x2e;&#111;&#114;&#x67;\n](mailto:&#x76;&#111;&#x6c;&#117;&#x6e;&#116;&#x65;&#101;&#x72;&#64;&#x6e;&#97;&#x76;&#x67;&#x75;&#114;&#x75;&#107;&#117;&#x6c;&#x2e;&#111;&#114;&#x67;)\n. \n\n\n\nThank you! \n\n\n\nWe're glad to have you on this journey of impacting over **One Lakh learners**.\n\n"
                    }
                ]
            },
            {
                "id": "4218",
                "parent_exercise_id": null,
                "course_id": "152",
                "name": "Python Curriculum Structure",
                "slug": "instructions-to-python-facilitators__python-curriculum-structure_md",
                "sequence_num": 600,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/instructions-to-python-facilitators/python-curriculum-structure.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "The **_8 courses in `Python`_** are divided into **_23 Workshop Classes_**. We expect you to follow this Class division, to ensure that the sequence of learning is maintained, and a child has an opportunity to come back and attend only those specific classes she had doubts in, or had missed it for whatever reasons. \n\n\n\n> Please use this nomenclature of Class Title to ensure uniformity in the learning pace of the students. \n|Class Title|Class Description|Expected Outcomes|\n|-----------|-----------|-----------|\n|Class 1 - Introduction to `Python`|What do Computers do? What is Programming? Why should you become a Programmar? What is the use of Programming? Basic Definitions|This introductory module should help you introduce yourself and create a connection with the students. It should cover **WHY** the student must learn Programming and how it would benefit them. Use the initial classes to create curiosity in the students. You can show them what one can achieve using programming, ask them if they would want to create something like that in the future, and let them know the stepping stones to get there.|\n|Class 2 - Introduction to `Python` and Definitions|Continue with the Basic Definitions, Why should you learn `Python`? What are the features of `Python`? How to start with `Python`? How to write a comment? What is `Indentation`? What are the `Applications` of `Python`?|This module shall continue with the definitions of the previous class. Share an understanding of why we use `Python` to start learning programming. This module should aim to create intrigue and interest in the students to learn `Python`.|\n|Class 3 - `Variables`|What is a `Variable`? What are the various naming rules? How can we assign values to `variables`? Practice Questions and Quizzes|Spend an entire class on making the student understand the concept of `Variables`, as it is the first step to learning coding. You can share live examples, show them multiple `variable` names and make them choose the correct one based on the rules they've learnt. You can also ask them to share their screen, and write on the `Python` `compiler` called Playground, on the Meraki Android `Application`.|\n|Class 4 - Data Types|What are Data type? What are Predefined Data types in `Python`? What are the various Numeric Data types - `Integer`, `Float`, Complex? Practice Questions|This module should introduce the different types of Data Types used in `Python`, and students should be clear with concepts related to Numeric Data Types.|\n|Class 5 - Data Types|In depth explanation of `String` Data type, Boolean Data type, Data Type `Conversion`. Practice Questions and Quizzes|A student should be familiar with Data types and should be able to answer questions related to data types and `conversions`.|\n|Class 6 - `Operators`|What are `Operators`? What are the different types of `Operators` in `Python`? In depth explanation of Arithmetic `Operators`, with examples. `Operator` Precedence. Practice Questions and Quizzes|Share live examples to make them understand the concept of `operators`. Make them experiment with `Operator`  Precedence as this concept must be very clear and ensure there is no confusion.|\n|Class 7 - `Operators`|What are Assignment `Operators`, Comparison `Operators` and Logical `Operators`? Share lots of examples, Practice Questions and Quizzes|Brush up topics from Basic Definitions, and cross question them. They should be able to run simple `codes` on Playground.|\n|Class 8 - `Operators` and Revision|An introduction to Bitwise, Membership and Identity `Operators`. Revision and Practice Questions on `Operators`, Data Types and `Variables`|The basics of the child should be clear. Despite the complexity, Bitwise, Membership and Identity `operators` can be introduced, which would come in handy for future topics. Post this class we shall go on to functionalities like If-Else, `Loops`, etc.|\n|Class 9 - If Else|Why do we use conditions? What is a condition? How to use If-Else? What are flowcharts and how should we prepare them? How should we write an If-Else `code`?|Before starting with If-Else, the students should be familiar with algorithms and how to make flow charts, and know about every box of a flow chart, eg: Start box, Condition box, etc. They should be able to implement their condition with `code`. You can ask them to share their screen and `code` on Playground.|\n|Class 10 - If Else|Introduction and examples of If-Elif. If-Else with \"and\" and \"or\". Dry run `code` for revision. Practice Questions and Quizzes|The students should be able to explain and write their own `code` and experiment with the conditions. Enable discussions and cross questioning between the students in the class, to make them confident on their `code`. You can follow it up with a dry run to confirm the flow of the `code`.|\n|Class 11 - If Else|Nested If-Else. Practice Questions and Quizzes|The students should know multiple if else and understand the flow of if else and nested if else. You can give them more practice questions on Flowcharts and If-Else.|\n|Class 12 - If Else|Revision and Practice Questions on If-Else Condition|You can make this an interactive session by posing multiple questions to the students and asking each child to solve it. You can also have them choose the correct `code` through MCQs, or `True` or `False` questions. A child should have a clear understandig of this module, to move forward.|\n|Class 13 - `Loops`|What are `Loops`? What are the Advantages of using `Loops`? What is Counter? Examples of Counters. Different types of `loops` in `Python` - While `loop`. Practice Questions and Quizzes|Share real life examples of `Loops`, and the types and their `syntax`. The flow of `Loops`, Increment and Decriment and how that can be done, should be clear.|\n|Class 14 - `Loops`|`Loop` control `statements` such as continue, break, pass. Nested while `loops`. Share live examples and Practice Questions.|The student should know when and why to use continue, break and pass and its difference. The flow and `syntax` should be clear. Make sure of patterns in Nested While `Loops` and focus on concepts as well as logic.|\n|Class 15 - `Loops`|Basics of For `Loops`. Revise Membership `operator`. For `Loop` using Sequence (`String`) and using Range(). Practice Questions and Quizzes|The student should know how Range works and from where it starts executing and where it stops, the `syntax` and flow of FOR `loop`. Should know whether `String` has indexing and how to iterate over `string` using FOR `loop`.|\n|Class 16 - `Loops`|Else in for `loop`. Using control `statements` in for. Nested for `loop`. Practice Questions and Quizzes.|The students should know how to implement conditions using if else in `loop`, how to make use of `operators` like \"in\" in conditional `statements`. Have a clear understanding of flow and `syntax` of nested for `loop` and can experiment where and how can we use else out of `loop`. Share more practice on logical questions using for `loop` making concepts and logic clear.|\n|Class 17 - List|What is List? Characteristics of list. Defining list - list of `strings` - list of `integer` - list of `float` - mixed list. List indexing and slicing. Practice Questions and Quizzes.|What are the advantages of using list and what types of data can be stored in a list. Concept of indexing must be clear (positive indexing as well as negative indexing). The student should focus on slicing in which start , stop and step are there and experiment with slicing and what parameters are accep`tab`le and how it works by default.|\n|Class 18 - List|List Operations. Length. Membership. Iteration through index. Concatenation. Work with `loop`. Practice Questions and Quizzes.|The student should know how to find length of list, how to iterate over a list using `loop` through indexing, how to add two lists together and how to make use membership `operator`.|\n|Class 19 - List|`Python` built-in methods with exampes - append(), clear(), count(), Index(), insert(), pop(), remove(), reverse() , sort(), min(), max(). Practice Questions and Quizzes.|The student should know how to add elements to list by using which method, how to remove elements, how to update elements. Should be aware of the difference between pop(), remove(), its `syntax` and why they are used. What and how many parameters to be passed in thses methods. Nested list indexing (+ve and -ve). By the end of this class, students should be able to find minimum and maximum with in built function and without.|\n|Class 20 - List|Nested List. More examples on list. Practice Questions and Quizzes.|Recapitulate through all the topics covered in list and revise to make concepts clear. Practice more.|\n|Class 21 - Dictionary|Introduction to dictionary. Accessing Elements from a Dictionary. Adding Elements to a Dictionary. Upading a Dictionary. Practice Questions and Quizzes.|What is dictionary. The structure of dictionary. Why do we use it. What are `keys` and values. How to access them. How to add and update items in dict. How to iterate over a dict.|\n|Class 22 - Dictionary|Removing element from a Dictionary. Iterating Dictionary. Iterate through all `keys` and values. More Exmaples on Dictionary.|Dict.`keys`() method to iterate over `keys` of dict. Dict.values() method to iterate over values of dict. Dict.items() method to iterate over `keys` and values. How `loop` can be used in iterating dict.|\n|Class 23 - Dictionary|Built-in functions in Dictionary - get (), update(), clear(), copy(), delete(). Built in methods in Dictionary. Practice Questions and Quizzes.|By the end of this class, the student should be clear on all the concepts taught till date. You can choose to conduct revision classes too.|\n\nFurther Support\n\nDon't fret in case, this is still confusing. \n\n**We are here to help**\n\n. You can write back to us on the Volunteering email you received from our end, or write to \n\n[&#118;&#x6f;&#108;&#x75;&#x6e;&#116;&#101;&#x65;&#x72;&#x40;&#x6e;&#97;&#118;&#103;&#x75;&#114;&#117;&#107;&#117;&#x6c;&#x2e;&#111;&#114;&#x67;\n](mailto:&#118;&#x6f;&#108;&#x75;&#x6e;&#116;&#101;&#x65;&#x72;&#x40;&#x6e;&#97;&#118;&#103;&#x75;&#114;&#117;&#107;&#117;&#x6c;&#x2e;&#111;&#114;&#x67;)\n. \n\n\n\nThank you! \n\n\n\nWe're glad to have you on this journey of impacting over **One Lakh learners**.\n\n\n\n**Happy Volunteering!**\n\n"
                    }
                ]
            },
            {
                "id": "4222",
                "parent_exercise_id": null,
                "course_id": "152",
                "name": "How to take a class?",
                "slug": "instructions-to-python-facilitators__how-to-take-a-class_md",
                "sequence_num": 700,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/instructions-to-python-facilitators/how-to-take-a-class.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "Dear Facilitator, \n\n\n\nWe're sure you're wondering how your first class would be, thinking hard on how you must interact with students, etc. Don't worry. We're sharing a few simple points that you can keep in mind, that shall help you in your classes. \n\n\n\n* Give a very warm welcome to the students into your class and assure them you'll support them in their journey of learning `Python`/ English or Typing *(whichever program you're here to teach for)* The students are here for a three month introductory course to `Python`, supported with English and Touch Typing if they're interested. \n\n* Introduce yourself. Tell them what you do, and share any of your beginner experiences with them in the respective field, to encourage and motivate them. \n\n* Make your initial classes very inspiring. Create a sense of curiosity in them. You could share videos with them, daily real life examples of its `application`. Show them what they can achieve once they learn any of the three programs. \n\n\n* Teach them how to [enrol to a class](https://youtu.be/Lha-WlS2Hkg) on the `application`. You can screenshare the `application`. Do this for a few classes till they understand and get accustomed to Meraki. \n* You can also state the program structure. 23 Classes for `Python` and 15 Classes for English. Tell them how they'll have to attend Class 1, then Class 2 and then Class 3 in an order so that they don't miss out on anything. \n\n* If they are stuck anywhere, they can attend any doubt class and get it solved. \n\n* You can show them the curriculum for [`Python`](https://www.merakilearn.org/course/152/exercise/3719) and [English](https://www.merakilearn.org/course/152/exercise/3720) as well.\n* You must encourage them to self study through [Meraki](https://youtu.be/UN3us4vDHhc) and use the live classes as support in their learning journey. Encourage them to read more, and run their `codes` on [Playground](https://youtu.be/UN3us4vDHhc) on Meraki, to practice. \n* We therefore request you to have a good understanding of the `application` before starting your classes. \n\n\n\nDo write to us at \n\n[&#118;&#x6f;&#x6c;&#117;&#110;&#116;&#x65;&#101;&#114;&#64;&#x6e;&#97;&#x76;&#x67;&#117;&#x72;&#x75;&#x6b;&#x75;&#x6c;&#x2e;&#111;&#114;&#x67;\n](mailto:&#118;&#x6f;&#x6c;&#117;&#110;&#116;&#x65;&#101;&#114;&#64;&#x6e;&#97;&#x76;&#x67;&#117;&#x72;&#x75;&#x6b;&#x75;&#x6c;&#x2e;&#111;&#114;&#x67;)\n if you have any further questions of queries. We're here to help you! \n\n\n\n**Happy Volunteering!**\n\n"
                    }
                ]
            },
            {
                "id": "4219",
                "parent_exercise_id": null,
                "course_id": "152",
                "name": "Spoken English Curriculum Structure",
                "slug": "instructions-to-python-facilitators__spoken-english-curriculum-structure_md",
                "sequence_num": 800,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/instructions-to-python-facilitators/spoken-english-curriculum-structure.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "Step 3 - Curriculum\n\nBrowse through the Curriculum to teach Basics of Spoken English\n\n\n\n|Class Name|Number of Classes|Week|Duration of Class|\n|-----------|-----------|-----------|-----------|\n|[Introduction](https://www.merakilearn.org/course/125/exercise/3246)|1|1|1.5 hours|\n|[Food](https://www.merakilearn.org/course/125/exercise/3247)|1|2|1.5 hours|\n|[Family](https://www.merakilearn.org/course/125/exercise/3249)|1|3|1.5 hours|\n|[Other Activities](https://www.merakilearn.org/course/125/exercise/3250)|1|4|1.5 hours|\n|[Area](https://www.merakilearn.org/course/125/exercise/3248)|1|5|1.5 hours|\n|[Travel/Transport](https://www.merakilearn.org/course/125/exercise/3268)|1|6|1.5 hours|\n|[Movies](https://www.merakilearn.org/course/125/exercise/3270)|1|7|1.5 hours|\n|[Other Parts of India](https://www.merakilearn.org/course/125/exercise/3269)|1|8|1.5 hours|\n|[Festivals you celebrate](https://www.merakilearn.org/course/125/exercise/3271)|1|9|1.5 hours|\n|[Seasons/Subject Predicates](https://www.merakilearn.org/course/125/exercise/3272)|1|10|1.5 hours|\n|[Tenses](https://www.merakilearn.org/course/125/exercise/3273)|1|11|1.5 hours|\n|[Hobbies/ Similies-Metaphors](https://www.merakilearn.org/course/125/exercise/3274)|1|12|1.5 hours|\n|[Concept of Giving](https://www.merakilearn.org/course/125/exercise/3275)|1|13|1.5 hours|\n|[Teachers/ Story Comprehension](https://www.merakilearn.org/course/125/exercise/3276)|1|14|1.5 hours|\n|[Goals/ Reflections](https://www.merakilearn.org/course/125/exercise/3277)|1|15|1.5 hours|\n\nIt is divided into 15 Workshop Classes. We expect you to follow this Class division, to ensure that the sequence of learning is maintained, and a child has an opportunity to come back and attend only those specific classes she had doubts in, or had missed it for whatever reasons.\n\n\n\nStep 4 - Classes with Students\n\n* Use the first five minutes to understand their learning journey on Meraki, and encourage them to self learn using Live Classes only as an extra help.\n\n* Use the next ten minutes to recapitulate and revise previous topics, and solve their previous queries.\n\n* You can use the second half of the class to share problems for the students to solve. It could be in the form of MCQs, `True` or `False`, Sentence Formation, or even Questions.\n\n* You can assign some homework or prework a student must do before the next class, such as the next topic they can read/ study and come for in the next class.\n\n* Keep checking in with the students if they've understood or no in between to ensure its a dialogue and not a monologue. You can try to make it as innovative and interactive as you wish to!\n\n\n\nContent Guidelines\n\nFor every question you ask the kid please make sure you share the answer about yourself as well. Speaking in English and listening to people talk in English collectively helps improve children\u2019s skills\n\n\n\n**Dear coordinator, YOU ARE THE REASON WHY THE SPOKEN ENGLISH PROGRAM IS GROWING AT SUCH A FAST PACE. THANKS A TONNN FOR HELPING US OUT. NO PRESSURE. BUT YOU ARE THE DRIVING FACTOR FOR THE SUCCESS OF THE GROUP** :)\n\n"
                    }
                ]
            },
            {
                "id": "4223",
                "parent_exercise_id": "4223",
                "course_id": "152",
                "name": "Spoken English Phases",
                "slug": "instructions-to-python-facilitators__Spoken-English-Phases/SpokenEnglish-Phases_md",
                "sequence_num": 900,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/instructions-to-python-facilitators/Spoken-English-Phases/SpokenEnglish-Phases.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "**SPOKEN ENGLISH**\n\n\n\nIf you're a fluent English speaker, we invite you to help us teach Spoken English to students willing to learn and help them speak more confidently. Sign up with NavGurukul/Meraki, an initiative to help rural, semi urban Indian students, housewives and salaried people who have studied in non english medium schools to speak English confidently.\n\n\n\nVolunteers opting for Spoken-English Volunteering opportunity, will be spending time over the online classes with the children coming from local schools, rural and marginalised communities. \n\n\n\nThe classes will take 1 hour per week over the course of 15 week period.\n\n\n\nThese classes will take place online over Meraki application, where students use the android application, where as the volunteers have to access via\n[www.merakilearn.org\n](https://www.merakilearn.org)\nthrough the calendar invites.\n\n\n**We have broken down the curriculum over [Meraki](https://www.merakilearn.org) in parts of 15 week course material, where we expect the students to come out in better fluency and speaking by the end of this course. This can be ensured by the following phases that we have mentioned for the flow of Volunteer and Student interaction based on the structure.**\n\n\n**Preparatory Volunteer Notes**\n\n- `Application` - know the whereabouts of Meraki android `application`\n\n- Online Class - learn how to create class on [Meraki](https://www.merakilearn.org/classes)\n- Curriculum\n  - Walkthrough the 15 week course material\n  - Feedback for any additions/omissions in the curriculum\n  - Provide any supplement material *run-through the Volunteer Manager in advance*\n  - Do not use malicious, external resources unless verified by the volunteer Manager\n  - Walkthrough of the external material to be done 2 days before the class is being conducted\n\n- Reach out POC (Contact Details) - issues/challenges\n\n- Provide Feedback - Class/Curriculum (Weekly)\n\n- Monthly Volunteer Engagement - ***4 engagements through 15 weeks*** (30 Minutes)\n  - Celebrating success of the ongoing classes\n  - Understanding the challenges\n  - Brainstorming solutions\n  - Volunteers can reach out to Volunteer Managers at any moment if required\n\n\n\n***FLOW OF SPOKEN ENGLISH:*** \n**PHASE-1: Building Comfort & Rapport**\n\n\n\nFirst 5 weeks, make the students comfor`tab`le and familiarise (orientation class for assessing their levels, for introducing them to learning outcomes and approach). First 2-3 classes could be about team building related exercises, introductions, without any language correction.. just allow everyone to get comfor`tab`le in using whatever level of English they know without hesitation.\n\n\n\n**PHASE -2:** **Usage of Elements of English**\nSecond 5 weeks, Grammar and language building. Each class will introduce one basic grammar topic and use exercises like fill in the blanks etc to test understanding. Can give one or two homework exercises. Take support from `youtube` videos, visual and interactive modes. Simple basic grammar topics and concepts to ensure students don't rote learn sentences. Here the learning outcome is to enable them to form sentences and convey their thoughts. **(*Please ensure to maintain `code` of conduct while sharing external media `files` and links)***\n\n\n\n**PHASE-3:** **Building Fluency**\n\n\n\nLast 5 weeks, This phase focusses on fluency, diction, pronunciation, pauses, comfort and confidence. Here the classes will have more and more of interaction and communication from the students. The idea is to get them to coherently form ideas and express in the language. Towards the end focus could be on discussion general interview topics or questions.\n***Last class - Week 15 -Celebration of course completion, Certificate announcement (download), appreciation for completion, learning outcomes and feedback***\n\n\n\n***`Key` Notes to be remembered while conducting these phases:***\n\n1. The intent is to build their comfort, Spoken English and finally their fluency to be atleast interview ready.\n\n2. Adding more vocabulary as and when required based on the pickup of students.\n\n\n1. There might be a variation amongst the students with the level of their understanding and pickup, which is where volunteers need to amalgamate and process together.\n\n2. Volunteers could routinely check with students if they are able to follow the content.\n\n"
                    }
                ]
            },
            {
                "id": "4224",
                "parent_exercise_id": null,
                "course_id": "152",
                "name": "Volunteer Tracking Sheet",
                "slug": "instructions-to-python-facilitators__Volunteer-tracker_md",
                "sequence_num": 1000,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/instructions-to-python-facilitators/Volunteer-tracker.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "1. `Python` Volunteers\n\nPlease fill in the following sheet after every class:\n[Python Programming - Class Log\n](https://docs.google.com/spreadsheets/d/1A8M0DIBB-yhlJ7_JvLSgBKppq5498hxwDyyc9GNs2F4/edit?usp=sharing)\n\n\n2.Spoken-English Volunteers\n\nPlease fill in the following sheet:\n[Spoken English - Class Log\n](https://docs.google.com/spreadsheets/d/1jZYeO6412o1tFhmGVRjWETmotBMXZjK15CAiyy2Z0_c/edit#gid=0)\n\n\nPlease contact for any queries here: \n\n[&#x76;&#x6f;&#108;&#117;&#x6e;&#116;&#x65;&#101;&#114;&#64;&#x6e;&#x61;&#x76;&#x67;&#x75;&#114;&#117;&#x6b;&#x75;&#108;&#46;&#x6f;&#114;&#x67;\n](mailto:&#x76;&#x6f;&#108;&#117;&#x6e;&#116;&#x65;&#101;&#114;&#64;&#x6e;&#x61;&#x76;&#x67;&#x75;&#114;&#117;&#x6b;&#x75;&#108;&#46;&#x6f;&#114;&#x67;)\n"
                    }
                ]
            }
        ]
    }
}